{"version":3,"file":"static/js/983.a4e97dd3.chunk.js","mappings":"uNAEaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qHAOhBC,EAAKH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4GAOdG,EAAeL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+BAIzBK,EAAUP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4GAQpBO,EAAQT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wI,SCU9B,EAnCkB,SAAHS,GAAsB,IAAhBC,EAAQD,EAARC,SACbC,GAAWC,EAAAA,EAAAA,MAIjB,OACEC,EAAAA,EAAAA,KAAChB,EAAI,CAAAiB,SACFJ,EAASK,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAWH,EAAXG,YAAW,OACrCC,EAAAA,EAAAA,MAACnB,EAAE,CAAAa,SAAA,EACDD,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaN,GAAMO,MAAO,CAAEC,KAAMd,GAAWG,UACnDD,EAAAA,EAAAA,KAACV,EAAY,CAAAW,UACXD,EAAAA,EAAAA,KAAA,OACEa,IACEP,EAAW,kCAAAI,OAC2BJ,GAVpD,8EAaYQ,IAAKT,EACLU,MAAM,OACNC,OAAO,aAKbhB,EAAAA,EAAAA,KAACR,EAAO,CAAAS,UACND,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaN,GAAMC,MAAOA,EAAMJ,UACtCD,EAAAA,EAAAA,KAACN,EAAK,CAAAO,SAAEI,UAlBLD,EAqBJ,KAIb,C,gGCKA,UAlCiB,WACf,IAAAa,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAoBpB,OAlBAI,EAAAA,EAAAA,YAAU,WACJF,GAIJG,MACE,iEACAC,EAAAA,GAECC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GAGJL,EAAQK,EAASE,QACnB,IACCC,OAAM,SAAAC,GAAG,OAAIC,EAAAA,GAAAA,MAAYD,EAAI,GAClC,GAAG,CAACV,KAGFrB,EAAAA,EAAAA,KAAA,QAAAC,UACEM,EAAAA,EAAAA,MAAC0B,EAAAA,EAAS,CAAAhC,SAAA,EACRD,EAAAA,EAAAA,KAAA,MAAIkC,MAAO,CAAEC,UAAW,SAAUC,SAAU,OAAQC,WAAY,KAAMpC,SAAC,qBAGvED,EAAAA,EAAAA,KAAA,SACCqB,IAAQrB,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CAACzC,SAAUwB,QAItC,C,sDCvCO,IAAMI,EAAU,CACrBc,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N","sources":["components/MovieList/MovieList.style.jsx","components/MovieList/MovieList.jsx","pages/HomePage.jsx","serviceApi/themoviedbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  list-style: none;\n  padding: 30px 0;\n`;\nexport const Li = styled.li`\n  width: calc(20% - 20px);\n  margin: 10px;\n  border: 1px solid #e3e3e3;\n  border-radius: 8px;\n`;\n\nexport const WrapperImage = styled.div`\n  overflow: hidden;\n`;\n\nexport const Content = styled.div`\n  padding: 26px 10px 12px;\n\n  display: flex;\n  align-content: flex-start;\n  flex-wrap: wrap;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  color: #000;\n  transition: color 300ms linear;\n\n  &:hover {\n    color: var(--tmdbLightBlue);\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Li, WrapperImage, Title, Content } from './MovieList.style';\n\nconst MovieList = ({ dataList }) => {\n  const location = useLocation();\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <List>\n      {dataList.map(({ id, title, poster_path }) => (\n        <Li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <WrapperImage>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                    : defaultImg\n                }\n                alt={title}\n                width=\"100%\"\n                height=\"250\"\n              />\n            </WrapperImage>\n          </Link>\n\n          <Content>\n            <Link to={`/movies/${id}`} title={title}>\n              <Title>{title}</Title>\n            </Link>\n          </Content>\n        </Li>\n      ))}\n    </List>\n  );\n};\n\nexport default MovieList;\n","import { Container } from 'components/App.styled';\nimport MovieList from 'components/MovieList/MovieList';\nimport React, { useEffect, useState } from 'react';\nimport { options } from '../serviceApi/themoviedbApi';\nimport { toast } from 'react-toastify';\n// const KEY_API = '76d76dfd7b6e978a139e5b8adc9a8ee6';\n\nconst HomePage = () => {\n  const [list, setList] = useState(null);\n\n  useEffect(() => {\n    if (list) {\n      return;\n    }\n\n    fetch(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      options\n    )\n      .then(response => response.json())\n      .then(response => {\n        // console.log('list', response);\n\n        setList(response.results);\n      })\n      .catch(err => toast.error(err));\n  }, [list]);\n\n  return (\n    <main>\n      <Container>\n        <h1 style={{ textAlign: 'center', fontSize: '32px', fontWeight: 700 }}>\n          Trending Movies\n        </h1>\n        <hr />\n        {list && <MovieList dataList={list} />}\n      </Container>\n    </main>\n  );\n};\n\nexport default HomePage;\n","export const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NmQ3NmRmZDdiNmU5NzhhMTM5ZTViOGFkYzlhOGVlNiIsInN1YiI6IjY1MTNlMjI4NzlhMWMzMDEzYWE2ZGY0ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.OLljB3dWM0vxoQXzuHqabIWo1lgTHgs-WsVPw4nkuQw',\n  },\n};\n\n// fetch('https://api.themoviedb.org/3/trending/movie/day?language=en-US', options)\n//   .then(response => response.json())\n//   .then(response => console.log(response.results))\n//   .catch(err => console.error(err));\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Li","_templateObject2","WrapperImage","_templateObject3","Content","_templateObject4","Title","_templateObject5","_ref","dataList","location","useLocation","_jsx","children","map","_ref2","id","title","poster_path","_jsxs","Link","to","concat","state","from","src","alt","width","height","_useState","useState","_useState2","_slicedToArray","list","setList","useEffect","fetch","options","then","response","json","results","catch","err","toast","Container","style","textAlign","fontSize","fontWeight","MovieList","method","headers","accept","Authorization"],"sourceRoot":""}